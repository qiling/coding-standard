imports:
    - { resource: "config.yaml" }

# set for EasyCodingStandard
services:
    _defaults:
        public: true
        autowire: true
        autoconfigure: true

    # class has to be final, abstract or Doctrine entity
    PhpCsFixer\Fixer\ClassNotation\FinalInternalClassFixer: null

    # import namespaces for classes, constants and functions
    # configuration: https://github.com/slevomat/coding-standard#slevomatcodingstandardnamespacesreferenceusednamesonly-
    SlevomatCodingStandard\Sniffs\Namespaces\ReferenceUsedNamesOnlySniff:
        searchAnnotations: true
        allowFallbackGlobalFunctions: true
        allowFallbackGlobalConstants: true
        allowPartialUses: false

    # see https://github.com/symplify/codingstandard to see all loaded Symplify checkers
    Symplify\CodingStandard\Fixer\:
        resource: '../src/Fixer'
        # checkers that needs configuration to run
        exclude:
            - '../src/Fixer/Order/MethodOrderByTypeFixer.php'

    Symplify\CodingStandard\Sniffs\:
        resource: '../src/Sniffs'
        # checkers that needs configuration to run
        exclude:
            - '../src/Sniffs/ControlStructure/SprintfOverContactSniff.php'
            - '../src/Sniffs/CleanCode/ForbiddenParentClassSniff.php'
            - '../src/Sniffs/DeadCode/UnusedPublicMethodSniff.php'

    PhpCsFixer\Fixer\Phpdoc\PhpdocLineSpanFixer: null

    Symplify\CodingStandard\Sniffs\Architecture\DuplicatedClassShortNameSniff:
        allowed_class_names:
            - 'File*'
            # per monorepo package unique
            - '*Exception'
            - 'Option'
            - 'InitCommand'
            # duplicated deprecation
            - 'FinderSanitizer'
            # extended 3rd party class
            - 'CommentedOutCodeSniff'
            # tests
            - 'Some*'
            - 'GithubApi'
